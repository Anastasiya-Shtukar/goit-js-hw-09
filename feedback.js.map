{"version":3,"file":"feedback.js","sources":["../src/feedback.js"],"sourcesContent":["const feedbackForm = document.querySelector('.feedback-form');\nconst email = document.querySelector('.feedback-email');\nconst message = document.querySelector('.feedback-message');\n\nlet savedfeedbackFormState = localStorage.getItem('feedback-form-state');\nlet parsedfeedbackFormState = JSON.parse(savedfeedbackFormState);\ntry {\n  email.value = parsedfeedbackFormState['email'];\n  message.value = parsedfeedbackFormState['message'];\n} catch (error) {}\n\nfeedbackForm.addEventListener('input', function (event) {\n  let feedbackFormState = {\n    email: email.value.trim(),\n    message: message.value.trim(),\n  };\n\n  localStorage.setItem(\n    'feedback-form-state',\n    JSON.stringify(feedbackFormState)\n  );\n});\n\nfeedbackForm.addEventListener('submit', () => {\n  if (email.value.trim() === '' || message.value.trim() === '') {\n    return alert('All form fields must be filled in');\n  }\n\n  let savedfeedbackFormState = localStorage.getItem('feedback-form-state');\n  let parsedfeedbackFormState = JSON.parse(savedfeedbackFormState);\n  console.log(parsedfeedbackFormState);\n\n  localStorage.removeItem('feedback-form-state');\n});\n"],"names":["feedbackForm","email","message","savedfeedbackFormState","parsedfeedbackFormState","event","feedbackFormState"],"mappings":"oCAAA,MAAMA,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAQ,SAAS,cAAc,iBAAiB,EAChDC,EAAU,SAAS,cAAc,mBAAmB,EAE1D,IAAIC,EAAyB,aAAa,QAAQ,qBAAqB,EACnEC,EAA0B,KAAK,MAAMD,CAAsB,EAC/D,GAAI,CACFF,EAAM,MAAQG,EAAwB,MACtCF,EAAQ,MAAQE,EAAwB,OAC1C,MAAgB,CAAE,CAElBJ,EAAa,iBAAiB,QAAS,SAAUK,EAAO,CACtD,IAAIC,EAAoB,CACtB,MAAOL,EAAM,MAAM,KAAM,EACzB,QAASC,EAAQ,MAAM,KAAM,CACjC,EAEE,aAAa,QACX,sBACA,KAAK,UAAUI,CAAiB,CACpC,CACA,CAAC,EAEDN,EAAa,iBAAiB,SAAU,IAAM,CAC5C,GAAIC,EAAM,MAAM,SAAW,IAAMC,EAAQ,MAAM,KAAM,IAAK,GACxD,OAAO,MAAM,mCAAmC,EAGlD,IAAIC,EAAyB,aAAa,QAAQ,qBAAqB,EACnEC,EAA0B,KAAK,MAAMD,CAAsB,EAC/D,QAAQ,IAAIC,CAAuB,EAEnC,aAAa,WAAW,qBAAqB,CAC/C,CAAC"}